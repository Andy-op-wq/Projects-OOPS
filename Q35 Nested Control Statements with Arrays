/* Assignment 10: Nested Control Statements with Arrays  
Write a program to find all subsets of an array whose sum equals a given target value.  
Input: Array of integers and a target sum.  
Output: All subsets (in any order) that sum up to the target.  
For example: Input: [2, 3, 5], Target = 5 Output: [2, 3] and [5] */


#include <iostream>
using namespace std;

void findSubsets(int arr[], int n, int target, int current[], int currentSize, int index) {
    // Calculate the sum of the current subset
    int sum = 0;
    for (int i = 0; i < currentSize; i++) {
        sum += current[i];
    }
    
    // If the sum matches the target, print the current subset
    if (sum == target) {
        cout << "[";
        for (int i = 0; i < currentSize; i++) {
            cout << current[i];
            if (i < currentSize - 1) cout << ", ";
        }
        cout << "]" << endl;
    }

    // Explore further subsets
    for (int i = index; i < n; i++) {
        current[currentSize] = arr[i];  // Add arr[i] to the current subset
        findSubsets(arr, n, target, current, currentSize + 1, i + 1);  // Recursive call
    }
}

int main() {
    int n, target;
    
    cout << "Enter the number of elements in the array: ";
    cin >> n;
    
    int arr[n];
    cout << "Enter the elements of the array: ";
    for (int i = 0; i < n; i++) {
        cin >> arr[i];
    }
    
    cout << "Enter the target sum: ";
    cin >> target;
    
    int current[n];  // Array to store the current subset
    findSubsets(arr, n, target, current, 0, 0);  // Call the function to find subsets
    
    return 0;
}
